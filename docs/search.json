[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop sobre Git / Github 2024",
    "section": "",
    "text": "Informaci√≥n general\n\n\nSobre el curso üìåRequisitos previosAgenda üìÜ\n\n\nEste documento se basa en ‚ÄúHappy Git with R‚Äù de Jenny Bryan, los STAT 545 TAs, Jim Hester, as√≠ como lasgu√≠as practicas de Github.\n\nFechas: 16 y 18 octubre 2024\nDuraci√≥n del curso: 3 horas y 30 minutos\n\nInstructora:\n\nEvelia Lorena Coss-Navarrete - PostDoc, LIIGH-UNAM.\n\nResumen:\nEste tutorial te ense√±ar√° los conceptos fundamentales de GitHub, incluyendo repositorios, ramas, confirmaciones y solicitudes de cambio. A trav√©s de la creaci√≥n de tu propio repositorio personalizado y pagina web, aprender√°s a gestionar el flujo de trabajo de las solicitudes de cambio, un m√©todo ampliamente utilizado para colaborar en la creaci√≥n y revisi√≥n de c√≥digo.\nObjetivos:\nEn esta gu√≠a r√°pida aprender√°s a:\n\nCrear y gestionar un repositorio.\nIniciar y administrar una nueva rama.\nRealizar cambios en un archivo y enviarlos a GitHub como confirmaci√≥n.\nCrear tu p√°gina de inicio en Github.\nCrear tu p√°gina web.\n\nCitar y reutilizar el material del curso\nLos datos del curso se pueden reutilizar y adaptar libremente con la debida atribuci√≥n. Todos los datos de los cursos de estos repositorios est√°n sujetos a la licencia Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0).\n\n\n\nDebes tener una cuenta de usuario de GitHub. Para m√°s informaci√≥n, consulta ‚ÄúCreaci√≥n de una cuenta en GitHub‚Äù.\nNo necesitas saber c√≥mo codificar, utilizar la l√≠nea de comandos o instalar Git (el software de control de versiones en el que est√° compilado GitHub).\nContar con una terminal con Git, en Windows puedes usar Git Bash.\n\n\n\n\n\n\n\n\n\n\nTema\nTiempo\n\n\n\n\nüî∑ Secci√≥n 1 - Introduction and Quality control (1 h y 30 min) - (8:30 - 10:00 h)\n\n\n\n\nCreaci√≥n de una cuenta en GitHub\n\n5 min\n\n\n\nIntroducci√≥n a Git / GitHub\n\n15 min\n\n\n\n\n\n\n\nPr√°ctica 1: scATAC-seq Pre-Processing and Quality Control\n\n30 min\n\n\n‚òï Coffee break (10 min) - (10:30-11:00 h) ‚òï\n\n\n\nüî∑¬† Secci√≥n 2 - scATAC-seq Downstream analysis (2 h) - (11:00-13:00 h)\n\n\n\n\nPr√°ctica 2: scATAC-seq Downstream\n\n1 h\n\n\n\nPractical 15: Analyses and scRNA-seq Integration\n\n1 h\n\n\nüçñüçó Lunch (1 h) - (13:00 - 14:00) üçñüçó\n\n\n\nüî∑¬† Secci√≥n 3 - Motif analysis and results (14:00 - 15:30 h)\n\n\n\n\nPractical 16: Motif analysis with Signac\n\n30 min\n\n\n\nPractical 17: Exploring results (graphs)\n\n30 min\n\n\n\nOther tools used in scATAC-seq\n\n30 min"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1¬† Introducci√≥n a Git / GitHub",
    "section": "",
    "text": "Este documento se basa en \"Happy Git with R\" de Jenny Bryan, los STAT 545 TAs, Jim Hester, asi como las guias practicas de Github."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3¬† Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "href": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "title": "2¬† Recordatorio de pasos en Bash",
    "section": "2.1 Preparaci√≥n del directorio de trabajo",
    "text": "2.1 Preparaci√≥n del directorio de trabajo\n\nRuta / Camino absoluto\ncd /home/usuario/data/\n\n\n\nRuta / Camino relativo\ncd ../ # Ir a la carpeta anterior"
  },
  {
    "objectID": "Bash.html#comandos-b√°sicos",
    "href": "Bash.html#comandos-b√°sicos",
    "title": "2¬† Recordatorio de pasos en Bash",
    "section": "2.2 Comandos b√°sicos",
    "text": "2.2 Comandos b√°sicos\n\n\n\n\n\n\n\n\nComandos\nInformaci√≥n\nArgumentos\n\n\n\n\nssh\nConexi√≥n a servidores\nssh usuario@servidor.mx\n\n\nls\nObservar el contenido de los archivos en una carpeta\nls directorio/\n\n\ncd\nMoverse de directorios\ncd /home/usuario/data/\n\n\nmkdir\nCrear un nuevo directorio\nmkdir data\n\n\nrmdir\nEliminar el directorio\nrmkdir -rf data\n\n\nnano¬†/¬†vim\nEditores de texto plano\nnano Archivo.txt / vim Archivo.txt\n\n\ncp\nCopiar archivos\ncp Archivo1.txt /home/usuario/data/\n\n\nmv\nMover un archivo o carpeta\n\n\n\necho\nPara llamar y/o declarar variables\necho ‚ÄúHello world‚Äù\n\n\nchmod\nCambiar permisos del usuario\nchmod 777 data/\n\n\nrsync\nDescargar o subir archivos\n\n\n\nscp\nDescargar o subir archivos"
  },
  {
    "objectID": "intro.html#por-qu√©-hacer-control-de-versiones-de-nuestros-proyectos",
    "href": "intro.html#por-qu√©-hacer-control-de-versiones-de-nuestros-proyectos",
    "title": "1¬† Introducci√≥n a Git / GitHub",
    "section": "1.1 ¬øPor qu√© hacer control de versiones de nuestros proyectos?",
    "text": "1.1 ¬øPor qu√© hacer control de versiones de nuestros proyectos?\n\n‚úÖ Los proyectos suelen cambiar y crecer.\nüíæ Es d√≠ficil saber cu√°les fueron todos los cambios a lo largo del tiempo (en especial tiempos largos, hazlo por tu yo del futuro!).\nü§î Las colaboraciones se pueden complicar sin un buen control de versiones.\nüîê Seguridad.\n\n\n\n\n‚ÄúnotFinal.doc‚Äù by Jorge Cham, https://www.phdcomics.com"
  },
  {
    "objectID": "intro.html#git",
    "href": "intro.html#git",
    "title": "1¬† Introducci√≥n a Git / GitHub",
    "section": "1.2 Git",
    "text": "1.2 Git\nGit es un sistema de control de versiones distribuido, gratuito y de c√≥digo abierto, dise√±ado para manejar todo tipo de proyectos, desde los m√°s peque√±os hasta los m√°s grandes, con rapidez y eficiencia.\nGit es f√°cil de aprender y ocupa poco espacio con un rendimiento rapid√≠simo. Supera a las herramientas SCM como Subversion, CVS, Perforce y ClearCase con caracter√≠sticas como la ramificaci√≥n local barata, las c√≥modas √°reas de preparaci√≥n y los m√∫ltiples flujos de trabajo.\nEn resumen:\n\nGit es un sistema de control de versiones\nGit funciona con GitHub, Bitbucket o GitLab"
  },
  {
    "objectID": "intro.html#git-vs-controles-de-versi√≥n-a-mano",
    "href": "intro.html#git-vs-controles-de-versi√≥n-a-mano",
    "title": "1¬† Introducci√≥n a Git / GitHub",
    "section": "1.3 Git vs controles de versi√≥n a mano",
    "text": "1.3 Git vs controles de versi√≥n a mano\n\n\n\n\n\nCon Git cada contribuidor tiene una copia del repositorio central, con todos los archivos y la historia de los cambios por los que han pasado."
  }
]