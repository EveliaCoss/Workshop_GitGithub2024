# Introducci√≥n a Git / GitHub

## ¬øPor qu√© hacer control de versiones de nuestros proyectos?

1.  ‚úÖ Los proyectos suelen cambiar y crecer.
2.  üíæ Es d√≠ficil saber cu√°les fueron todos los cambios a lo largo del tiempo (en especial tiempos largos, hazlo por tu yo del **futuro!**).
3.  ü§î Las colaboraciones se pueden complicar sin un buen control de versiones.
4.  üîê Seguridad.

[!["notFinal.doc" by Jorge Cham, https://www.phdcomics.com](https://swcarpentry.github.io/git-novice/fig/phd101212s.png){width="300"}](https://swcarpentry.github.io/git-novice/01-basics.html)

## Git

Git es un sistema de **control de versiones distribuido, gratuito y de c√≥digo abierto**, dise√±ado para manejar todo tipo de proyectos, desde los m√°s peque√±os hasta los m√°s grandes, con rapidez y eficiencia.

Git es f√°cil de aprender y ocupa poco espacio con un **rendimiento rapid√≠simo**. Supera a las herramientas SCM como Subversion, CVS, Perforce y ClearCase con caracter√≠sticas como la ramificaci√≥n local barata, las c√≥modas √°reas de preparaci√≥n y los m√∫ltiples flujos de trabajo.

En resumen:

-   Git es un sistema de control de versiones

-   Git funciona con GitHub, Bitbucket o GitLab

## **Git vs controles de versi√≥n a mano**

[![](https://comunidadbioinfo.github.io/cdsb2023/img/git_vers.png){width="600"}](https://comunidadbioinfo.github.io/cdsb2023/control-de-versiones-con-github-y-rstudio.html)

Con Git cada contribuidor tiene una copia del repositorio central, con todos los archivos y la historia de los cambios por los que han pasado.
